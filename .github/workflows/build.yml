name: Build
on:
  workflow_dispatch:
    inputs:
      extended_targets:
        description: Build extended targets
        type: boolean
        required: false
        default: false
  workflow_call:
    inputs:
      extended_targets:
        description: Build extended targets
        type: boolean
        required: false
        default: false

  # push:
  #   branches:
  #     - main
  #     - dev

env:
  # The project name specified in your Cargo.toml
  PROJECT_NAME: santa

jobs:
  build:
    name: Build - ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      # fail-fast: false
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: santa
            command: cargo
          - name: linux-arm64
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            asset_name: santa
            command: cross
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: santa.exe
            command: cargo
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
            asset_name: santa
            command: cross
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
            asset_name: santa
            command: cargo

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      # Only install cross if we need it
      # Install via cargo-binstall which is typically faster
      - name: Install Cross
        if: matrix.command == 'cross'
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross

      # - name: Install just
      #   uses: extractions/setup-just@v1

      - name: Build Binary
        run: ${{ matrix.command }} build --verbose --locked --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v3
        with:
          # name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}



  build-cross:
    name: Build - ${{ matrix.target }} - cross
    runs-on: ubuntu-latest
    if: github.event.inputs.extended_targets == true
    strategy:
      fail-fast: false
      matrix:
        target:
          # 32-bit x86
          - i686-unknown-linux-gnu
          # 32-bit ARM (on Android)
          - armv7-linux-androideabi
          # 64-bit ARM (on Android)
          - aarch64-linux-android
        include:
          - { asset_name: santa }

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }} --all-features
          use-cross: true
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.asset_name }}
